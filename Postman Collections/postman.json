{
	"info": {
		"_postman_id": "85d5ddea-3596-47cc-8571-00eeeca59d55",
		"name": "Doqett Compliance API",
		"description": "API collection for testing Doqett Compliance GRC platform endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43449129"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"Admin\",\n    \"lastName\": \"User\",\n    \"roles\": [\"admin\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user in the system"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData && jsonData.data && jsonData.data.token) {",
									"    pm.environment.set(\"authToken\", jsonData.data.token);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login to obtain auth token. This automatically saves the token to the environment variable."
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Get information about the currently logged in user"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration, login, and session management"
		},
		{
			"name": "Compliance - Frameworks",
			"item": [
				{
					"name": "List Frameworks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/compliance/frameworks?active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"frameworks"
							],
							"query": [
								{
									"key": "active",
									"value": "true"
								},
								{
									"key": "category",
									"value": "security",
									"disabled": true
								},
								{
									"key": "organization",
									"value": "ISO",
									"disabled": true
								}
							]
						},
						"description": "List all compliance frameworks with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Framework",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/compliance/frameworks/{{frameworkId}}?includeStats=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"frameworks",
								"{{frameworkId}}"
							],
							"query": [
								{
									"key": "includeStats",
									"value": "true"
								}
							]
						},
						"description": "Get a specific framework by ID, with the option to include implementation statistics"
					},
					"response": []
				},
				{
					"name": "Create Framework",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SOC 2\",\n    \"version\": \"2023\",\n    \"description\": \"System and Organization Controls for Service Organizations\",\n    \"organization\": \"AICPA\",\n    \"category\": \"security\",\n    \"website\": \"https://www.aicpa.org\",\n    \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/compliance/frameworks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"frameworks"
							]
						},
						"description": "Create a new compliance framework"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing compliance frameworks (e.g., SOC 2, ISO 27001, HIPAA)"
		},
		{
			"name": "Compliance - Controls",
			"item": [
				{
					"name": "List Controls",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/compliance/controls?frameworkId={{frameworkId}}&implementationStatus=not_implemented&isActive=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"controls"
							],
							"query": [
								{
									"key": "frameworkId",
									"value": "{{frameworkId}}"
								},
								{
									"key": "implementationStatus",
									"value": "not_implemented"
								},
								{
									"key": "categories",
									"value": "access_control",
									"disabled": true
								},
								{
									"key": "ownerId",
									"value": "{{userId}}",
									"disabled": true
								},
								{
									"key": "isActive",
									"value": "true"
								},
								{
									"key": "search",
									"value": "password",
									"disabled": true
								}
							]
						},
						"description": "List all controls with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Control",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/compliance/controls/{{controlId}}?includeRelated=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"controls",
								"{{controlId}}"
							],
							"query": [
								{
									"key": "includeRelated",
									"value": "true"
								}
							]
						},
						"description": "Get a specific control by ID, with the option to include related controls"
					},
					"response": []
				},
				{
					"name": "Create Control",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"frameworkId\": \"{{frameworkId}}\",\n    \"code\": \"CC5.1\",\n    \"title\": \"COSO - Control Activities\",\n    \"description\": \"The entity selects and develops control activities that contribute to the mitigation of risks to the achievement of objectives to acceptable levels.\",\n    \"guidance\": \"Implement controls to ensure appropriate access, change management, and secure development processes.\",\n    \"implementationStatus\": \"not_implemented\",\n    \"categories\": [\"control_activities\", \"risk_management\"],\n    \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/compliance/controls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"controls"
							]
						},
						"description": "Create a new control within a framework"
					},
					"response": []
				},
				{
					"name": "Update Control Implementation",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"implementationStatus\": \"partially_implemented\",\n    \"implementationDetails\": \"Implementation of password complexity and rotation policy is in progress. Expected completion by end of quarter.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/compliance/controls/{{controlId}}/implementation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"controls",
								"{{controlId}}",
								"implementation"
							]
						},
						"description": "Update the implementation status and details of a control"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing controls within compliance frameworks"
		},
		{
			"name": "Compliance - Evidence",
			"item": [
				{
					"name": "List Evidence",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/compliance/evidence?controlId={{controlId}}&status=pending&type=document&active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"evidence"
							],
							"query": [
								{
									"key": "controlId",
									"value": "{{controlId}}"
								},
								{
									"key": "frameworkId",
									"value": "{{frameworkId}}",
									"disabled": true
								},
								{
									"key": "status",
									"value": "pending"
								},
								{
									"key": "type",
									"value": "document"
								},
								{
									"key": "createdBy",
									"value": "{{userId}}",
									"disabled": true
								},
								{
									"key": "active",
									"value": "true"
								},
								{
									"key": "search",
									"value": "policy",
									"disabled": true
								}
							]
						},
						"description": "List all evidence with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Evidence",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/compliance/evidence/{{evidenceId}}?includeControls=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"evidence",
								"{{evidenceId}}"
							],
							"query": [
								{
									"key": "includeControls",
									"value": "true"
								}
							]
						},
						"description": "Get a specific evidence by ID, with the option to include related controls"
					},
					"response": []
				},
				{
					"name": "Upload Evidence",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Password Policy Document",
									"type": "text"
								},
								{
									"key": "controlIds",
									"value": "{{controlId}}",
									"type": "text"
								},
								{
									"key": "type",
									"value": "document",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Official password policy document approved by the security team",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/path/to/your/file.pdf"
								},
								{
									"key": "validityStartDate",
									"value": "2023-01-01",
									"type": "text"
								},
								{
									"key": "validityEndDate",
									"value": "2024-01-01",
									"type": "text"
								},
								{
									"key": "tags",
									"value": "[\"password\", \"policy\", \"security\"]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/compliance/evidence",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"evidence"
							]
						},
						"description": "Upload a new evidence file for one or more controls"
					},
					"response": []
				},
				{
					"name": "Review Evidence",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"approved\",\n    \"notes\": \"Evidence reviewed and approved. Meets all compliance requirements.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/compliance/evidence/{{evidenceId}}/review",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"evidence",
								"{{evidenceId}}",
								"review"
							]
						},
						"description": "Review and approve/reject an evidence submission"
					},
					"response": []
				},
				{
					"name": "Link Evidence to Control",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"controlId\": \"{{anotherControlId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/compliance/evidence/{{evidenceId}}/controls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"evidence",
								"{{evidenceId}}",
								"controls"
							]
						},
						"description": "Link an existing evidence to an additional control"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing evidence for compliance controls"
		},
		{
			"name": "Compliance - Policies",
			"item": [
				{
					"name": "List Policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/compliance/policies?type=security&status=published&effectiveOnly=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"policies"
							],
							"query": [
								{
									"key": "type",
									"value": "security"
								},
								{
									"key": "status",
									"value": "published"
								},
								{
									"key": "owner",
									"value": "{{userId}}",
									"disabled": true
								},
								{
									"key": "controlId",
									"value": "{{controlId}}",
									"disabled": true
								},
								{
									"key": "effectiveOnly",
									"value": "true"
								},
								{
									"key": "reviewDue",
									"value": "false",
									"disabled": true
								},
								{
									"key": "active",
									"value": "true",
									"disabled": true
								},
								{
									"key": "search",
									"value": "password",
									"disabled": true
								}
							]
						},
						"description": "List all policies with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Policy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/compliance/policies/{{policyId}}?includeControls=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"policies",
								"{{policyId}}"
							],
							"query": [
								{
									"key": "includeControls",
									"value": "true"
								}
							]
						},
						"description": "Get a specific policy by ID, with the option to include related controls"
					},
					"response": []
				},
				{
					"name": "Create Policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Password Policy\",\n    \"type\": \"security\",\n    \"description\": \"Policy defining password requirements and management\",\n    \"content\": \"# Password Policy\\n\\n## Purpose\\nThis policy establishes the requirements for secure passwords...\\n\\n## Requirements\\n1. Passwords must be at least 12 characters long\\n2. Passwords must include uppercase, lowercase, numbers, and special characters\\n3. Passwords must be changed every 90 days\\n...\",\n    \"owner\": \"{{userId}}\",\n    \"relatedControlIds\": [\"{{controlId}}\"],\n    \"tags\": [\"security\", \"password\", \"authentication\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/compliance/policies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"policies"
							]
						},
						"description": "Create a new policy document"
					},
					"response": []
				},
				{
					"name": "Approve Policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"approverName\": \"Jane Smith\",\n    \"approverTitle\": \"Chief Information Security Officer\",\n    \"comments\": \"Approved after review. All requirements met.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/compliance/policies/{{policyId}}/approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"policies",
								"{{policyId}}",
								"approve"
							]
						},
						"description": "Approve a policy that is in draft or review status"
					},
					"response": []
				},
				{
					"name": "Publish Policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"effectiveStartDate\": \"2023-07-01T00:00:00.000Z\",\n    \"effectiveEndDate\": \"2024-07-01T00:00:00.000Z\",\n    \"reviewDate\": \"2024-01-01T00:00:00.000Z\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/compliance/policies/{{policyId}}/publish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compliance",
								"policies",
								"{{policyId}}",
								"publish"
							]
						},
						"description": "Publish an approved policy, making it effective"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing policy documents"
		},
		{
			"name": "Risk Management",
			"item": [
				{
					"name": "List Risks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/risk/risks?categories=security&statuses=identified,assessed&severities=high,critical",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"risk",
								"risks"
							],
							"query": [
								{
									"key": "categories",
									"value": "security"
								},
								{
									"key": "statuses",
									"value": "identified,assessed"
								},
								{
									"key": "severities",
									"value": "high,critical"
								},
								{
									"key": "ownerId",
									"value": "{{userId}}",
									"disabled": true
								},
								{
									"key": "controlId",
									"value": "{{controlId}}",
									"disabled": true
								},
								{
									"key": "reviewDue",
									"value": "true",
									"disabled": true
								},
								{
									"key": "active",
									"value": "true",
									"disabled": true
								},
								{
									"key": "search",
									"value": "password",
									"disabled": true
								}
							]
						},
						"description": "List all risks with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Risk",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/risk/risks/{{riskId}}?includeControls=true&includeTreatments=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"risk",
								"risks",
								"{{riskId}}"
							],
							"query": [
								{
									"key": "includeControls",
									"value": "true"
								},
								{
									"key": "includeTreatments",
									"value": "true"
								}
							]
						},
						"description": "Get a specific risk by ID, with options to include related controls and treatment plans"
					},
					"response": []
				},
				{
					"name": "Create Risk",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Weak Password Controls\",\n    \"description\": \"Risk of unauthorized access due to weak password policies\",\n    \"category\": \"security\",\n    \"inherentImpact\": \"major\",\n    \"inherentLikelihood\": \"likely\",\n    \"residualImpact\": \"moderate\",\n    \"residualLikelihood\": \"possible\",\n    \"owner\": {\n        \"id\": \"{{userId}}\",\n        \"name\": \"John Smith\",\n        \"department\": \"Information Security\"\n    },\n    \"relatedControlIds\": [\"{{controlId}}\"],\n    \"reviewPeriodMonths\": 3,\n    \"tags\": [\"password\", \"access control\", \"authentication\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/risk/risks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"risk",
								"risks"
							]
						},
						"description": "Create a new risk assessment"
					},
					"response": []
				},
				{
					"name": "Create Risk Treatment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"riskId\": \"{{riskId}}\",\n    \"name\": \"Implement Strong Password Policy\",\n    \"description\": \"Implement and enforce stronger password requirements including minimum length, complexity, and regular rotation\",\n    \"type\": \"mitigate\",\n    \"status\": \"planned\",\n    \"dueDate\": \"2023-08-31T00:00:00.000Z\",\n    \"assignee\": \"{{userId}}\",\n    \"relatedControlIds\": [\"{{controlId}}\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/risk/treatments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"risk",
								"treatments"
							]
						},
						"description": "Create a new risk treatment plan"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing risks and risk treatments"
		},
		{
			"name": "Reporting & Dashboard",
			"item": [
				{
					"name": "List Reports",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/reporting/reports?type=compliance_status&scheduled=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reporting",
								"reports"
							],
							"query": [
								{
									"key": "type",
									"value": "compliance_status"
								},
								{
									"key": "scheduled",
									"value": "true"
								},
								{
									"key": "createdBy",
									"value": "{{userId}}",
									"disabled": true
								},
								{
									"key": "active",
									"value": "true",
									"disabled": true
								}
							]
						},
						"description": "List all reports with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/reporting/reports/{{reportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reporting",
								"reports",
								"{{reportId}}"
							]
						},
						"description": "Get a specific report by ID"
					},
					"response": []
				},
				{
					"name": "Create Report",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Monthly Compliance Status Report\",\n    \"type\": \"compliance_status\",\n    \"description\": \"Monthly report showing compliance status across all frameworks\",\n    \"format\": \"pdf\",\n    \"filter\": {\n        \"frameworkIds\": [\"{{frameworkId}}\"],\n        \"startDate\": \"2023-01-01T00:00:00.000Z\",\n        \"endDate\": \"2023-12-31T00:00:00.000Z\"\n    },\n    \"schedule\": {\n        \"frequency\": \"monthly\",\n        \"hour\": 1,\n        \"minute\": 0,\n        \"dayOfMonth\": 1,\n        \"recipients\": [\"admin@example.com\", \"compliance@example.com\"]\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/reporting/reports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reporting",
								"reports"
							]
						},
						"description": "Create a new report definition, optionally with scheduling"
					},
					"response": []
				},
				{
					"name": "Generate Report",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/reporting/reports/{{reportId}}/generate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reporting",
								"reports",
								"{{reportId}}",
								"generate"
							]
						},
						"description": "Generate a report on demand"
					},
					"response": []
				},
				{
					"name": "List Dashboards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/reporting/dashboards?type=compliance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reporting",
								"dashboards"
							],
							"query": [
								{
									"key": "type",
									"value": "compliance"
								},
								{
									"key": "isDefault",
									"value": "true",
									"disabled": true
								},
								{
									"key": "createdBy",
									"value": "{{userId}}",
									"disabled": true
								},
								{
									"key": "active",
									"value": "true",
									"disabled": true
								}
							]
						},
						"description": "List all dashboards with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Dashboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/reporting/dashboards/{{dashboardId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reporting",
								"dashboards",
								"{{dashboardId}}"
							]
						},
						"description": "Get a specific dashboard by ID"
					},
					"response": []
				},
				{
					"name": "Create Dashboard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Compliance Overview\",\n    \"type\": \"compliance\",\n    \"description\": \"Dashboard showing key compliance metrics and status\",\n    \"isDefault\": true,\n    \"widgets\": [\n        {\n            \"id\": \"widget1\",\n            \"title\": \"Framework Implementation Status\",\n            \"type\": \"chart\",\n            \"dataSource\": \"/api/compliance/frameworks/stats\",\n            \"size\": {\n                \"width\": 6,\n                \"height\": 4\n            },\n            \"position\": {\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"config\": {\n                \"chartType\": \"bar\",\n                \"xAxis\": \"framework\",\n                \"yAxis\": \"implementationRate\"\n            }\n        },\n        {\n            \"id\": \"widget2\",\n            \"title\": \"Evidence Status\",\n            \"type\": \"chart\",\n            \"dataSource\": \"/api/compliance/evidence/stats\",\n            \"size\": {\n                \"width\": 6,\n                \"height\": 4\n            },\n            \"position\": {\n                \"x\": 6,\n                \"y\": 0\n            },\n            \"config\": {\n                \"chartType\": \"pie\",\n                \"series\": \"status\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/reporting/dashboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reporting",
								"dashboards"
							]
						},
						"description": "Create a new dashboard"
					},
					"response": []
				},
				{
					"name": "List Metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/reporting/metrics?type=compliance_score",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reporting",
								"metrics"
							],
							"query": [
								{
									"key": "type",
									"value": "compliance_score"
								},
								{
									"key": "active",
									"value": "true",
									"disabled": true
								}
							]
						},
						"description": "List all metrics with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Metric",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/reporting/metrics/{{metricId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reporting",
								"metrics",
								"{{metricId}}"
							]
						},
						"description": "Get a specific metric by ID"
					},
					"response": []
				},
				{
					"name": "Create Metric",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Overall Compliance Score\",\n    \"type\": \"compliance_score\",\n    \"description\": \"Overall compliance score across all frameworks\",\n    \"calculationMethod\": \"average\",\n    \"query\": \"SELECT AVG(implementation_rate) FROM framework_stats\",\n    \"unit\": \"%\",\n    \"thresholds\": {\n        \"critical\": 70,\n        \"warning\": 85,\n        \"target\": 95\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/reporting/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reporting",
								"metrics"
							]
						},
						"description": "Create a new metric definition"
					},
					"response": []
				},
				{
					"name": "Calculate Metric",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/reporting/metrics/{{metricId}}/calculate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reporting",
								"metrics",
								"{{metricId}}",
								"calculate"
							]
						},
						"description": "Calculate a metric on demand"
					},
					"response": []
				}
			],
			"description": "Endpoints for reports, dashboards, and metrics"
		},
		{
			"name": "Audit Management",
			"item": [
				{
					"name": "List Audits",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/audit/audits?types=internal,external&statuses=planned,in_progress&frameworkId={{frameworkId}}&leadAuditorId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit",
								"audits"
							],
							"query": [
								{
									"key": "types",
									"value": "internal,external"
								},
								{
									"key": "statuses",
									"value": "planned,in_progress"
								},
								{
									"key": "frameworkId",
									"value": "{{frameworkId}}"
								},
								{
									"key": "leadAuditorId",
									"value": "{{userId}}"
								},
								{
									"key": "startDate",
									"value": "2023-01-01",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2023-12-31",
									"disabled": true
								},
								{
									"key": "active",
									"value": "true",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "10",
									"disabled": true
								},
								{
									"key": "pageNumber",
									"value": "1",
									"disabled": true
								}
							]
						},
						"description": "List all audits with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Audit",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/audit/audits/{{auditId}}?includeFindings=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit",
								"audits",
								"{{auditId}}"
							],
							"query": [
								{
									"key": "includeFindings",
									"value": "true"
								}
							]
						},
						"description": "Get a specific audit by ID, with the option to include findings"
					},
					"response": []
				},
				{
					"name": "Create Audit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"2023 SOC 2 Annual Audit\",\n    \"type\": \"external\",\n    \"description\": \"Annual SOC 2 Type II compliance audit\",\n    \"frameworkIds\": [\"{{frameworkId}}\"],\n    \"leadAuditor\": {\n        \"id\": \"{{userId}}\",\n        \"name\": \"John Smith\",\n        \"organization\": \"Audit Firm LLC\",\n        \"role\": \"Lead Auditor\",\n        \"isExternal\": true\n    },\n    \"auditTeam\": [\n        {\n            \"id\": \"team-member-1\",\n            \"name\": \"Jane Doe\",\n            \"organization\": \"Audit Firm LLC\",\n            \"role\": \"Senior Auditor\",\n            \"isExternal\": true\n        }\n    ],\n    \"schedule\": {\n        \"startDate\": \"2023-06-01T00:00:00.000Z\",\n        \"endDate\": \"2023-06-30T00:00:00.000Z\"\n    },\n    \"scope\": \"This audit covers all SOC 2 controls related to security, availability, and confidentiality.\",\n    \"methodology\": \"The audit will follow AICPA standards for SOC 2 Type II engagements.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/audit/audits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit",
								"audits"
							]
						},
						"description": "Create a new audit"
					},
					"response": []
				},
				{
					"name": "Update Audit Status",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"in_progress\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/audit/audits/{{auditId}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit",
								"audits",
								"{{auditId}}",
								"status"
							]
						},
						"description": "Update the status of an audit"
					},
					"response": []
				},
				{
					"name": "List Findings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/audit/findings?auditId={{auditId}}&types=nonconformity,observation&severities=high,critical&statuses=open,in_remediation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit",
								"findings"
							],
							"query": [
								{
									"key": "auditId",
									"value": "{{auditId}}"
								},
								{
									"key": "types",
									"value": "nonconformity,observation"
								},
								{
									"key": "severities",
									"value": "high,critical"
								},
								{
									"key": "statuses",
									"value": "open,in_remediation"
								},
								{
									"key": "controlId",
									"value": "{{controlId}}",
									"disabled": true
								},
								{
									"key": "assigneeId",
									"value": "{{userId}}",
									"disabled": true
								},
								{
									"key": "overdue",
									"value": "true",
									"disabled": true
								},
								{
									"key": "active",
									"value": "true",
									"disabled": true
								}
							]
						},
						"description": "List all findings with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Finding",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/audit/findings/{{findingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit",
								"findings",
								"{{findingId}}"
							]
						},
						"description": "Get a specific finding by ID"
					},
					"response": []
				},
				{
					"name": "Create Finding",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"title\": \"Weak Password Policy Implementation\",\n    \"description\": \"Password policy does not enforce minimum length and complexity requirements.\",\n    \"type\": \"nonconformity\",\n    \"severity\": \"high\",\n    \"controlIds\": [\"{{controlId}}\"],\n    \"evidenceIds\": [\"{{evidenceId}}\"],\n    \"dueDate\": \"2023-07-31T00:00:00.000Z\",\n    \"remediationPlan\": {\n        \"description\": \"Update and implement password policy to enforce minimum 12 character length and complexity requirements.\",\n        \"dueDate\": \"2023-07-15T00:00:00.000Z\",\n        \"assignee\": \"{{userId}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/audit/findings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit",
								"findings"
							]
						},
						"description": "Create a new audit finding"
					},
					"response": []
				},
				{
					"name": "Update Finding Status",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"in_remediation\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/audit/findings/{{findingId}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit",
								"findings",
								"{{findingId}}",
								"status"
							]
						},
						"description": "Update the status of an audit finding"
					},
					"response": []
				},
				{
					"name": "Add Remediation Plan",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Implement password complexity requirements in Active Directory and update authentication systems.\",\n    \"dueDate\": \"2023-08-15T00:00:00.000Z\",\n    \"assignee\": \"{{userId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/audit/findings/{{findingId}}/remediation-plan",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit",
								"findings",
								"{{findingId}}",
								"remediation-plan"
							]
						},
						"description": "Add a remediation plan to a finding"
					},
					"response": []
				},
				{
					"name": "Update Remediation Plan",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Updated remediation approach to include MFA implementation.\",\n    \"dueDate\": \"2023-09-01T00:00:00.000Z\",\n    \"assignee\": \"{{userId}}\",\n    \"status\": \"in_remediation\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/audit/findings/{{findingId}}/remediation-plan",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit",
								"findings",
								"{{findingId}}",
								"remediation-plan"
							]
						},
						"description": "Update an existing remediation plan"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing audits and audit findings"
		},
		{
			"name": "Audit Templates",
			"item": [
				{
					"name": "List Audit Templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/audit-templates?type=internal&frameworkId={{frameworkId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit-templates"
							],
							"query": [
								{
									"key": "type",
									"value": "internal"
								},
								{
									"key": "frameworkId",
									"value": "{{frameworkId}}"
								},
								{
									"key": "active",
									"value": "true",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "10",
									"disabled": true
								},
								{
									"key": "pageNumber",
									"value": "1",
									"disabled": true
								}
							]
						},
						"description": "List all audit templates with optional filters"
					},
					"response": []
				},
				{
					"name": "Get Audit Template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/audit-templates/{{templateId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit-templates",
								"{{templateId}}"
							]
						},
						"description": "Get a specific audit template by ID"
					},
					"response": []
				},
				{
					"name": "Create Audit Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SOC 2 Type II Audit Template\",\n    \"description\": \"Standard template for SOC 2 Type II audits\",\n    \"type\": \"internal\",\n    \"frameworkIds\": [\"{{frameworkId}}\"],\n    \"controlIds\": [\"{{controlId}}\"],\n    \"checklistItems\": [\n        {\n            \"description\": \"Review password policy documentation\",\n            \"category\": \"Access Control\",\n            \"required\": true\n        },\n        {\n            \"description\": \"Verify encryption at rest implementation\",\n            \"category\": \"Encryption\",\n            \"required\": true\n        },\n        {\n            \"description\": \"Examine network segmentation\",\n            \"category\": \"Network Security\",\n            \"required\": false\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/audit-templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit-templates"
							]
						},
						"description": "Create a new audit template"
					},
					"response": []
				},
				{
					"name": "Create Audit From Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"templateId\": \"{{templateId}}\",\n    \"name\": \"Q3 2023 SOC 2 Audit\",\n    \"leadAuditor\": {\n        \"id\": \"{{userId}}\",\n        \"name\": \"John Smith\",\n        \"organization\": \"Audit Firm LLC\",\n        \"role\": \"Lead Auditor\",\n        \"isExternal\": true\n    },\n    \"schedule\": {\n        \"startDate\": \"2023-07-01T00:00:00.000Z\",\n        \"endDate\": \"2023-09-30T00:00:00.000Z\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/audit/audits/from-template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"audit",
								"audits",
								"from-template"
							]
						},
						"description": "Create a new audit using an existing template"
					},
					"response": []
				}
			]
		},
    {
      "name": "Asset Management",
      "item": [
        {
          "name": "Create Asset",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Production Web Server\",\n    \"type\": \"server\",\n    \"description\": \"Primary web server for production environment\",\n    \"status\": \"active\",\n    \"riskLevel\": \"high\",\n    \"location\": \"US East Data Center\",\n    \"ipAddress\": \"10.0.0.1\",\n    \"macAddress\": \"00:1A:2B:3C:4D:5E\",\n    \"serialNumber\": \"SRV-2023-001\",\n    \"purchaseDate\": \"2023-01-15T00:00:00.000Z\",\n    \"endOfLifeDate\": \"2028-01-15T00:00:00.000Z\",\n    \"tags\": [\"production\", \"web-tier\", \"critical\"],\n    \"metadata\": {\n        \"cpuCores\": 16,\n        \"memoryGB\": 64,\n        \"storageGB\": 2000,\n        \"operatingSystem\": \"Ubuntu 22.04 LTS\"\n    },\n    \"owner\": {\n        \"id\": \"user123\",\n        \"name\": \"John Smith\",\n        \"department\": \"IT Operations\"\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/assets",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets"
              ]
            },
            "description": "Create a new asset"
          },
          "response": []
        },
        {
          "name": "Get Asset",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/assets/{{asset_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "{{asset_id}}"
              ]
            },
            "description": "Get an asset by ID"
          },
          "response": []
        },
        {
          "name": "List Assets",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/assets?type=server&status=active&riskLevel=high&nearingEndOfLife=false&pageSize=10&pageNumber=1",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets"
              ],
              "query": [
                {
                  "key": "type",
                  "value": "server"
                },
                {
                  "key": "status",
                  "value": "active"
                },
                {
                  "key": "riskLevel",
                  "value": "high"
                },
                {
                  "key": "nearingEndOfLife",
                  "value": "false"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                },
                {
                  "key": "pageNumber",
                  "value": "1"
                }
              ]
            },
            "description": "List assets with filters"
          },
          "response": []
        },
        {
          "name": "Assign Asset Owner",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"ownerId\": \"user456\",\n    \"ownerName\": \"Jane Doe\",\n    \"ownerDepartment\": \"IT Security\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/assets/{{asset_id}}/owner",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "{{asset_id}}",
                "owner"
              ]
            },
            "description": "Assign a new owner to an asset"
          },
          "response": []
        },
        {
          "name": "Update Asset Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"maintenance\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/assets/{{asset_id}}/status",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "{{asset_id}}",
                "status"
              ]
            },
            "description": "Update an asset's status"
          },
          "response": []
        },
        {
          "name": "Update Asset Risk Level",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"riskLevel\": \"critical\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/assets/{{asset_id}}/risk-level",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "{{asset_id}}",
                "risk-level"
              ]
            },
            "description": "Update an asset's risk level"
          },
          "response": []
        },
        {
          "name": "Link Asset to Control",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"controlId\": \"control123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/assets/{{asset_id}}/controls",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "{{asset_id}}",
                "controls"
              ]
            },
            "description": "Link an asset to a compliance control"
          },
          "response": []
        },
        {
          "name": "Update Technical Details",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"location\": \"US West Data Center\",\n    \"ipAddress\": \"10.0.0.2\",\n    \"macAddress\": \"00:1A:2B:3C:4D:5F\",\n    \"serialNumber\": \"SRV-2023-001-A\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/assets/{{asset_id}}/technical-details",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "{{asset_id}}",
                "technical-details"
              ]
            },
            "description": "Update an asset's technical details"
          },
          "response": []
        },
        {
          "name": "Get Asset Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/assets/statistics",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "assets",
                "statistics"
              ]
            },
            "description": "Get asset inventory statistics"
          },
          "response": []
        }
      ],
      "description": "Endpoints for asset management"
    },
		{
			"name": "Server Health",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check if the server is running"
					},
					"response": []
				}
			],
			"description": "Endpoints to check server health"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:4000",
			"type": "string"
		}
	]
}
